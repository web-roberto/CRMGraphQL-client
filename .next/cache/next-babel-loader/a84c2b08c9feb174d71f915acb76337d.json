{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nconst AUTENTICAR_USUARIO = gql`\n  mutation autenticarUsuario($input: AutenticarInput) {\n    autenticarUsuario(input: $input) {\n      token\n    }\n  }\n`;\n\nconst Login = () => {\n  //language\n  const {\n    0: useLang,\n    1: setLang\n  } = useState('En'); //distribuirlo como useContext en toda la aplicacion? El ApolloProvider es un useContext??\n  //(useLang == 'En') ? <p>English Text Here</p> : <p>French Text Here</p>\n  // routing\n\n  const router = useRouter();\n  const {\n    0: mensaje,\n    1: guardarMensaje\n  } = useState(null); // Mutation para crear nuevos usuarios en apollo\n\n  const [autenticarUsuario] = useMutation(AUTENTICAR_USUARIO);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('El email no es v치lido').required('El email no puede ir vacio'),\n      password: Yup.string().required('El password es obligatorio')\n    }),\n    onSubmit: async valores => {\n      // console.log(valores);\n      const {\n        email,\n        password\n      } = valores;\n\n      try {\n        const {\n          data\n        } = await autenticarUsuario({\n          variables: {\n            input: {\n              email,\n              password\n            }\n          }\n        });\n        console.log(data);\n        guardarMensaje('Autenticando...'); // Guardar el token en localstorage\n\n        setTimeout(() => {\n          const {\n            token\n          } = data.autenticarUsuario;\n          localStorage.setItem('token', token);\n        }, 1000); // Redireccionar hacia clientes\n\n        setTimeout(() => {\n          guardarMensaje(null);\n          router.push('/');\n        }, 2000);\n      } catch (error) {\n        guardarMensaje(error.message.replace('GraphQL error: ', '')); // console.log(error);\n\n        setTimeout(() => {\n          guardarMensaje(null);\n        }, 3000);\n      }\n    }\n  });\n\n  const mostrarMensaje = () => {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\"\n    }, __jsx(\"p\", null, mensaje));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, null, __jsx(\"h1\", {\n    className: \"text-center text-2xl text-white font-light\"\n  }, useLang == 'En' ? 'Login' : 'Entre', ' '), __jsx(\"h3\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\"\n  }, \"USER: roberto.alonso.gandia@gmail.com PASSWORD:Adosat2020\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\"\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-sm\"\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit\n  }, __jsx(\"div\", {\n    className: \"mb-4\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\"\n  }, useLang == 'En' ? 'Email' : 'Correo elect칩nico'), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: useLang == 'En' ? \"User's Email\" : 'Email Usuario',\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email\n  })), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\n  }, __jsx(\"p\", {\n    className: \"font-bold\"\n  }, \"Error\"), __jsx(\"p\", null, formik.errors.email)) : null, __jsx(\"div\", {\n    className: \"mb-4\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"password\"\n  }, useLang == 'En' ? 'Password' : 'Contrase침a'), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"password\",\n    type: \"password\",\n    placeholder: useLang == 'En' ? \"User's Password\" : 'Password Usuario',\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password\n  })), formik.touched.password && formik.errors.password ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\n  }, __jsx(\"p\", {\n    className: \"font-bold\"\n  }, \"Error\"), __jsx(\"p\", null, formik.errors.password)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercas hover:cursor-pointer hover:bg-gray-900\",\n    value: useLang == 'En' ? 'Start Session' : 'Iniciar Sesi칩n'\n  }))))));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}