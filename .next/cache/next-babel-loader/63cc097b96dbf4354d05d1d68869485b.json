{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"C:\\\\DESPLIEGUES\\\\APLICACIONES-EN-GITHUB\\\\portolio-apps\\\\web-development\\\\jp-crm-graphql\\\\crmcliente\\\\pages\\\\mejoresvendedores.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { gql, useQuery } from '@apollo/client';\nvar MEJORES_VENDEDORES = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    query mejoresVendedores {\\n        mejoresVendedores {\\n            vendedor {\\n                nombre\\n                email\\n            }\\n            total\\n        }\\n    }\\n\"])));\n\nvar MejoresVendedores = function MejoresVendedores() {\n  var _useQuery = useQuery(MEJORES_VENDEDORES),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      startPolling = _useQuery.startPolling,\n      stopPolling = _useQuery.stopPolling;\n\n  useEffect(function () {\n    startPolling(1000);\n    return function () {\n      stopPolling();\n    };\n  }, [startPolling, stopPolling]);\n  if (loading) return 'cargando...';\n  console.log(data);\n  var mejoresVendedores = data.mejoresVendedores;\n  var vendedorGrafica = [];\n  mejoresVendedores.map(function (vendedor, index) {\n    vendedorGrafica[index] = _objectSpread({}, vendedor.vendedor[0], {\n      total: vendedor.total\n    });\n  });\n  console.log(vendedorGrafica);\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Mejores Vendedores\"), __jsx(ResponsiveContainer, {\n    width: '99%',\n    height: 550,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(BarChart, {\n    className: \"mt-10\",\n    width: 600,\n    height: 500,\n    data: vendedorGrafica,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), __jsx(XAxis, {\n    dataKey: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), __jsx(YAxis, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), __jsx(Tooltip, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), __jsx(Legend, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }), __jsx(Bar, {\n    dataKey: \"total\",\n    fill: \"#3182CE\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default MejoresVendedores;","map":{"version":3,"names":["React","useEffect","Layout","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","gql","useQuery","MEJORES_VENDEDORES","MejoresVendedores","data","loading","error","startPolling","stopPolling","console","log","mejoresVendedores","vendedorGrafica","map","vendedor","index","total","top","right","left","bottom"],"sources":["C:/DESPLIEGUES/APLICACIONES-EN-GITHUB/portolio-apps/web-development/jp-crm-graphql/crmcliente/pages/mejoresvendedores.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport Layout from '../components/Layout'\nimport {\n    BarChart, Bar,  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n  } from 'recharts';\nimport { gql, useQuery } from '@apollo/client';\n\nconst MEJORES_VENDEDORES = gql`\n    query mejoresVendedores {\n        mejoresVendedores {\n            vendedor {\n                nombre\n                email\n            }\n            total\n        }\n    }\n`;\n\nconst MejoresVendedores = () => {\n\n    const {data, loading, error, startPolling, stopPolling} = useQuery(MEJORES_VENDEDORES);\n\n  \n\n    useEffect(() => {\n        startPolling(1000);\n        return () => {\n            stopPolling();\n        }\n    }, [startPolling, stopPolling])\n\n    if(loading) return 'cargando...';\n\n    console.log(data);\n\n\n    const { mejoresVendedores} = data;\n    \n    const vendedorGrafica = [];\n\n     mejoresVendedores.map((vendedor, index) => {\n        vendedorGrafica[index] = {\n            ...vendedor.vendedor[0],\n            total: vendedor.total\n        }\n    })\n\n\n    console.log(vendedorGrafica);\n\n    return (\n        <Layout>\n            <h1 className=\"text-2xl text-gray-800 font-light\">Mejores Vendedores</h1>\n\n            <ResponsiveContainer\n                width={'99%'}\n                height={550}\n            >\n                <BarChart\n                    className=\"mt-10\"\n                    width={600}\n                    height={500}\n                    data={vendedorGrafica}\n                    margin={{\n                        top: 5, right: 30, left: 20, bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"nombre\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"total\" fill=\"#3182CE\" />\n                </BarChart>\n            </ResponsiveContainer>\n        </Layout>\n     );\n}\n \nexport default MejoresVendedores;"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACIC,QADJ,EACcC,GADd,EACoBC,KADpB,EAC2BC,KAD3B,EACkCC,aADlC,EACiDC,OADjD,EAC0DC,MAD1D,EACkEC,mBADlE,QAES,UAFT;AAGA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,IAAMC,kBAAkB,GAAGF,GAAH,8PAAxB;;AAYA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;EAE5B,gBAA0DF,QAAQ,CAACC,kBAAD,CAAlE;EAAA,IAAOE,IAAP,aAAOA,IAAP;EAAA,IAAaC,OAAb,aAAaA,OAAb;EAAA,IAAsBC,KAAtB,aAAsBA,KAAtB;EAAA,IAA6BC,YAA7B,aAA6BA,YAA7B;EAAA,IAA2CC,WAA3C,aAA2CA,WAA3C;;EAIAlB,SAAS,CAAC,YAAM;IACZiB,YAAY,CAAC,IAAD,CAAZ;IACA,OAAO,YAAM;MACTC,WAAW;IACd,CAFD;EAGH,CALQ,EAKN,CAACD,YAAD,EAAeC,WAAf,CALM,CAAT;EAOA,IAAGH,OAAH,EAAY,OAAO,aAAP;EAEZI,OAAO,CAACC,GAAR,CAAYN,IAAZ;EAGA,IAAQO,iBAAR,GAA6BP,IAA7B,CAAQO,iBAAR;EAEA,IAAMC,eAAe,GAAG,EAAxB;EAECD,iBAAiB,CAACE,GAAlB,CAAsB,UAACC,QAAD,EAAWC,KAAX,EAAqB;IACxCH,eAAe,CAACG,KAAD,CAAf,qBACOD,QAAQ,CAACA,QAAT,CAAkB,CAAlB,CADP;MAEIE,KAAK,EAAEF,QAAQ,CAACE;IAFpB;EAIH,CALA;EAQDP,OAAO,CAACC,GAAR,CAAYE,eAAZ;EAEA,OACI,MAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI;IAAI,SAAS,EAAC,mCAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBADJ,EAGI,MAAC,mBAAD;IACI,KAAK,EAAE,KADX;IAEI,MAAM,EAAE,GAFZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAII,MAAC,QAAD;IACI,SAAS,EAAC,OADd;IAEI,KAAK,EAAE,GAFX;IAGI,MAAM,EAAE,GAHZ;IAII,IAAI,EAAEA,eAJV;IAKI,MAAM,EAAE;MACJK,GAAG,EAAE,CADD;MACIC,KAAK,EAAE,EADX;MACeC,IAAI,EAAE,EADrB;MACyBC,MAAM,EAAE;IADjC,CALZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GASI,MAAC,aAAD;IAAe,eAAe,EAAC,KAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EATJ,EAUI,MAAC,KAAD;IAAO,OAAO,EAAC,QAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAVJ,EAWI,MAAC,KAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAXJ,EAYI,MAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAZJ,EAaI,MAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAbJ,EAcI,MAAC,GAAD;IAAK,OAAO,EAAC,OAAb;IAAqB,IAAI,EAAC,SAA1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAdJ,CAJJ,CAHJ,CADJ;AA2BH,CA3DD;;AA6DA,eAAejB,iBAAf"},"metadata":{},"sourceType":"module"}