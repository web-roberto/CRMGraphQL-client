{"ast":null,"code":"var _jsxFileName = \"C:\\\\DESPLIEGUES\\\\APLICACIONES-EN-GITHUB\\\\portolio-apps\\\\web-development\\\\jp-crm-graphql\\\\crmcliente\\\\pages\\\\nuevopedido.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext, useState } from 'react';\nimport Layout from '../components/Layout';\nimport AsignarCliente from '../components/pedidos/AsignarCliente';\nimport AsignarProductos from '../components/pedidos/AsignarProductos';\nimport ResumenPedido from '../components/pedidos/ResumenPedido';\nimport Total from '../components/pedidos/Total';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport Swal from 'sweetalert2'; // Context de pedidos\n\nimport PedidoContext from '../context/pedidos/PedidoContext';\nconst NUEVO_PEDIDO = gql`\n    mutation nuevoPedido($input: PedidoInput){\n        nuevoPedido(input: $input) {\n            id\n        }\n    }\n`;\nconst OBTENER_PEDIDOS = gql`\n  query obtenerPedidosVendedor {\n      obtenerPedidosVendedor {\n        id\n        pedido {\n          id\n          cantidad\n          nombre\n        }\n        cliente {\n          id\n          nombre\n          apellido\n          email\n          telefono\n        }\n        vendedor\n        total\n        estado\n      }\n  }\n`;\n\nconst NuevoPedido = () => {\n  const router = useRouter();\n  const {\n    0: mensaje,\n    1: setMensaje\n  } = useState(null); // Utilizar context y extraer sus funciones y valores\n\n  const pedidoContext = useContext(PedidoContext);\n  const {\n    cliente,\n    productos,\n    total\n  } = pedidoContext; // Mutation para crear un nuevo pedido\n\n  const [nuevoPedido] = useMutation(NUEVO_PEDIDO, {\n    update(cache, {\n      data: {\n        nuevoPedido\n      }\n    }) {\n      const {\n        obtenerPedidosVendedor\n      } = cache.readQuery({\n        query: OBTENER_PEDIDOS\n      });\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidosVendedor: [...obtenerPedidosVendedor, nuevoPedido]\n        }\n      });\n    }\n\n  }); // TODO ACTUALIZAR EL CACHE\n\n  const validarPedido = () => {\n    return !productos.every(producto => producto.cantidad > 0) || total === 0 || cliente.length === 0 ? \" opacity-50 cursor-not-allowed \" : \"\";\n  };\n\n  const crearNuevoPedido = async () => {\n    const {\n      id\n    } = cliente; // Remover lo no deseado de productos\n\n    const pedido = productos.map(_ref => {\n      let {\n        __typename,\n        existencia\n      } = _ref,\n          producto = _objectWithoutProperties(_ref, [\"__typename\", \"existencia\"]);\n\n      return producto;\n    }); // console.log(pedido);\n\n    try {\n      const {\n        data\n      } = await nuevoPedido({\n        variables: {\n          input: {\n            cliente: id,\n            total,\n            pedido\n          }\n        }\n      }); // console.log(data);\n      // Redireccionar\n\n      router.push('/pedidos'); // Mostrar alerta\n\n      Swal.fire('Correcto', 'El pedido se registró correctamente', 'success');\n    } catch (error) {\n      setMensaje(error.message.replace('GraphQL error: ', ''));\n      setTimeout(() => {\n        setMensaje(null);\n      }, 3000);\n    }\n  };\n\n  const mostrarMensaje = () => {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, mensaje, \" \"));\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Crear Nuevo Pedido\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, __jsx(AsignarCliente, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }), __jsx(AsignarProductos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }), __jsx(ResumenPedido, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }), __jsx(Total, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: ` bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 ${validarPedido()} `,\n    onClick: () => crearNuevoPedido(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, \"Registrar Pedido\"))));\n};\n\nexport default NuevoPedido;","map":{"version":3,"names":["React","useContext","useState","Layout","AsignarCliente","AsignarProductos","ResumenPedido","Total","gql","useMutation","useRouter","Swal","PedidoContext","NUEVO_PEDIDO","OBTENER_PEDIDOS","NuevoPedido","router","mensaje","setMensaje","pedidoContext","cliente","productos","total","nuevoPedido","update","cache","data","obtenerPedidosVendedor","readQuery","query","writeQuery","validarPedido","every","producto","cantidad","length","crearNuevoPedido","id","pedido","map","__typename","existencia","variables","input","push","fire","error","message","replace","setTimeout","mostrarMensaje"],"sources":["C:/DESPLIEGUES/APLICACIONES-EN-GITHUB/portolio-apps/web-development/jp-crm-graphql/crmcliente/pages/nuevopedido.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport Layout from '../components/Layout';\nimport AsignarCliente from '../components/pedidos/AsignarCliente'\nimport AsignarProductos from '../components/pedidos/AsignarProductos'\nimport ResumenPedido from '../components/pedidos/ResumenPedido'\nimport Total from '../components/pedidos/Total';\nimport { gql, useMutation } from '@apollo/client'\nimport { useRouter } from 'next/router';\nimport Swal from 'sweetalert2';\n\n// Context de pedidos\nimport PedidoContext from '../context/pedidos/PedidoContext';\n\nconst NUEVO_PEDIDO = gql`\n    mutation nuevoPedido($input: PedidoInput){\n        nuevoPedido(input: $input) {\n            id\n        }\n    }\n`;\n\n\nconst OBTENER_PEDIDOS = gql`\n  query obtenerPedidosVendedor {\n      obtenerPedidosVendedor {\n        id\n        pedido {\n          id\n          cantidad\n          nombre\n        }\n        cliente {\n          id\n          nombre\n          apellido\n          email\n          telefono\n        }\n        vendedor\n        total\n        estado\n      }\n  }\n`\n\nconst NuevoPedido = () => {\n\n    const router = useRouter();\n    \n    const [mensaje, setMensaje] = useState(null);\n\n    // Utilizar context y extraer sus funciones y valores\n    const pedidoContext = useContext(PedidoContext);\n    const { cliente, productos, total } = pedidoContext;\n\n    // Mutation para crear un nuevo pedido\n    const [ nuevoPedido ] = useMutation(NUEVO_PEDIDO, {\n        update(cache, { data: { nuevoPedido }}) {\n          const {  obtenerPedidosVendedor} = cache.readQuery({query: OBTENER_PEDIDOS });\n          cache.writeQuery({\n            query: OBTENER_PEDIDOS,\n            data: {\n              obtenerPedidosVendedor: [...obtenerPedidosVendedor, nuevoPedido]\n            }\n          })\n        }\n      }); // TODO ACTUALIZAR EL CACHE\n\n    const validarPedido = () => {\n        return !productos.every( producto => producto.cantidad > 0 ) || total === 0 || cliente.length === 0 ? \" opacity-50 cursor-not-allowed \"  : \"\" ;\n    }\n\n    const crearNuevoPedido  = async () => {\n\n        const { id } = cliente;\n\n        // Remover lo no deseado de productos\n       const pedido = productos.map(( {__typename, existencia , ...producto} ) => producto )\n        // console.log(pedido);\n\n        try {\n            const { data } = await nuevoPedido({\n                variables: {\n                    input: {\n                        cliente: id,\n                        total,\n                        pedido\n                    }\n                }\n            });\n            // console.log(data);\n\n            // Redireccionar\n            router.push('/pedidos');\n\n            // Mostrar alerta\n            Swal.fire(\n                'Correcto',\n                'El pedido se registró correctamente',\n                'success'\n            )\n        } catch (error) {\n            setMensaje(error.message.replace('GraphQL error: ', ''));\n\n            setTimeout(() => {\n                setMensaje(null)\n            }, 3000);\n        }\n    }\n\n    const mostrarMensaje = () => {\n        return (\n            <div className=\"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto \">\n                <p>{mensaje} </p>\n            </div>\n        )\n    }\n\n    return ( \n        <Layout>\n            <h1 className=\"text-2xl text-gray-800 font-light\">Crear Nuevo Pedido</h1>\n\n            {mensaje && mostrarMensaje() }\n\n            <div className=\"flex justify-center mt-5\">\n                <div className=\"w-full max-w-lg\">\n                    <AsignarCliente />\n                    <AsignarProductos />\n                    <ResumenPedido />\n                    <Total />\n\n                    <button\n                        type=\"button\"\n                        className={` bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 ${ validarPedido() } `}\n                        onClick={() => crearNuevoPedido() }\n\n                    >Registrar Pedido</button>\n                </div>\n            </div>\n           \n        </Layout>\n     );\n}\n \nexport default NuevoPedido;"],"mappings":"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"},"metadata":{},"sourceType":"module"}