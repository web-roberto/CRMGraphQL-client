{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport Select from 'react-select';\nimport { gql, useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\nconst OBTENER_PRODUCTOS = gql`\n    query obtenerProductos {\n        obtenerProductos {\n            id\n            nombre\n            precio\n            existencia\n        }\n    }\n`;\n\nconst AsignarProductos = () => {\n  // state local del componente\n  const {\n    0: productos,\n    1: setProductos\n  } = useState([]); // Context de pedidos\n\n  const pedidoContext = useContext(PedidoContext);\n  const {\n    agregarProducto\n  } = pedidoContext; // consulta a la base de datos\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_PRODUCTOS);\n  useEffect(() => {\n    // TODO : FunciÃ³n para pasar a PedidoState.js\n    agregarProducto(productos);\n  }, [productos]);\n\n  const seleccionarProducto = producto => {\n    setProductos(producto);\n  };\n\n  if (loading) return null;\n  const {\n    obtenerProductos\n  } = data;\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\"\n  }, \"2.- Selecciona o busca los productos\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: obtenerProductos,\n    onChange: opcion => seleccionarProducto(opcion),\n    isMulti: true,\n    getOptionValue: opciones => opciones.id,\n    getOptionLabel: opciones => `${opciones.nombre} - ${opciones.existencia} Disponibles`,\n    placeholder: \"Busque o Seleccione el Producto\",\n    noOptionsMessage: () => \"No hay resultados\"\n  }));\n};\n\nexport default AsignarProductos;","map":null,"metadata":{},"sourceType":"module"}