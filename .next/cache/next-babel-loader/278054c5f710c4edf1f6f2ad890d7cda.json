{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport Select from 'react-select';\nimport { gql, useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\nconst OBTENER_CLIENTES_USUARIO = gql`\n    query obtenerClientesVendedor {\n        obtenerClientesVendedor {\n            id\n            nombre\n            apellido\n            empresa\n            email\n        }\n    }\n`;\n\nconst AsignarCliente = () => {\n  const {\n    0: cliente,\n    1: setCliente\n  } = useState([]); // Context de pedidos\n\n  const pedidoContext = useContext(PedidoContext);\n  const {\n    agregarCliente\n  } = pedidoContext; // Consultar la base de datos\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_CLIENTES_USUARIO); // console.log(data)\n  // console.log(loading)\n  // console.log(error)\n\n  useEffect(() => {\n    agregarCliente(cliente);\n  }, [cliente]);\n\n  const seleccionarCliente = clientes => {\n    setCliente(clientes);\n  }; // Resultados de la consulta\n\n\n  if (loading) return null;\n  const {\n    obtenerClientesVendedor\n  } = data;\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\"\n  }, \"1.- Asigna un Cliente al pedido\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: obtenerClientesVendedor,\n    onChange: opcion => seleccionarCliente(opcion),\n    getOptionValue: opciones => opciones.id,\n    getOptionLabel: opciones => opciones.nombre,\n    placeholder: \"Busque o Seleccione el Cliente\",\n    noOptionsMessage: () => \"No hay resultados\"\n  }));\n};\n\nexport default AsignarCliente;","map":null,"metadata":{},"sourceType":"module"}