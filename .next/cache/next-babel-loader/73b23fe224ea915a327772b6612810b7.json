{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nexports.__esModule = true;\nexports.observeLayoutShift = observeLayoutShift;\nexports.observeLargestContentfulPaint = observeLargestContentfulPaint;\nexports.observePaint = observePaint;\n\nfunction isTypeSupported(type) {\n  if (self.PerformanceObserver && PerformanceObserver.supportedEntryTypes) {\n    return PerformanceObserver.supportedEntryTypes.includes(type);\n  }\n\n  return false;\n}\n\nfunction observeLayoutShift(onPerfEntry) {\n  if (isTypeSupported('layout-shift')) {\n    var cumulativeScore = 0;\n    var observer = new PerformanceObserver(function (list) {\n      var _iterator = _createForOfIteratorHelper(list.getEntries()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var entry = _step.value;\n\n          // Only count layout shifts without recent user input.\n          if (!entry.hadRecentInput) {\n            cumulativeScore += entry.value;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    });\n    observer.observe({\n      type: 'layout-shift',\n      buffered: true\n    });\n    document.addEventListener('visibilitychange', function clsObserver() {\n      if (document.visibilityState === 'hidden') {\n        // Force any pending records to be dispatched.\n        observer.takeRecords();\n        observer.disconnect();\n        document.removeEventListener('visibilitychange', clsObserver, true);\n        onPerfEntry({\n          name: 'cumulative-layout-shift',\n          value: cumulativeScore\n        });\n      }\n    }, true);\n  }\n}\n\nfunction observeLargestContentfulPaint(onPerfEntry) {\n  if (isTypeSupported('largest-contentful-paint')) {\n    // Create a variable to hold the latest LCP value (since it can change).\n    var lcp; // Create the PerformanceObserver instance.\n\n    var observer = new PerformanceObserver(function (entryList) {\n      var entries = entryList.getEntries();\n      var lastEntry = entries[entries.length - 1];\n      lcp = lastEntry.renderTime || lastEntry.loadTime;\n    });\n    observer.observe({\n      type: 'largest-contentful-paint',\n      buffered: true\n    });\n    document.addEventListener('visibilitychange', function lcpObserver() {\n      if (lcp && document.visibilityState === 'hidden') {\n        document.removeEventListener('visibilitychange', lcpObserver, true);\n        onPerfEntry({\n          name: 'largest-contentful-paint',\n          value: lcp\n        });\n      }\n    }, true);\n  }\n}\n\nfunction observePaint(onPerfEntry) {\n  var observer = new PerformanceObserver(function (list) {\n    list.getEntries().forEach(onPerfEntry);\n  });\n  observer.observe({\n    type: 'paint',\n    buffered: true\n  });\n}","map":{"version":3,"names":["exports","__esModule","observeLayoutShift","observeLargestContentfulPaint","observePaint","isTypeSupported","type","self","PerformanceObserver","supportedEntryTypes","includes","onPerfEntry","cumulativeScore","observer","list","getEntries","entry","hadRecentInput","value","observe","buffered","document","addEventListener","clsObserver","visibilityState","takeRecords","disconnect","removeEventListener","name","lcp","entryList","entries","lastEntry","length","renderTime","loadTime","lcpObserver","forEach"],"sources":["C:/DESPLIEGUES/APLICACIONES-EN-GITHUB/portolio-apps/web-development/jp-crm-graphql/crmcliente/node_modules/next/dist/client/performance-relayer.js"],"sourcesContent":["\"use strict\";exports.__esModule=true;exports.observeLayoutShift=observeLayoutShift;exports.observeLargestContentfulPaint=observeLargestContentfulPaint;exports.observePaint=observePaint;function isTypeSupported(type){if(self.PerformanceObserver&&PerformanceObserver.supportedEntryTypes){return PerformanceObserver.supportedEntryTypes.includes(type);}return false;}function observeLayoutShift(onPerfEntry){if(isTypeSupported('layout-shift')){var cumulativeScore=0;var observer=new PerformanceObserver(list=>{for(var entry of list.getEntries()){// Only count layout shifts without recent user input.\nif(!entry.hadRecentInput){cumulativeScore+=entry.value;}}});observer.observe({type:'layout-shift',buffered:true});document.addEventListener('visibilitychange',function clsObserver(){if(document.visibilityState==='hidden'){// Force any pending records to be dispatched.\nobserver.takeRecords();observer.disconnect();document.removeEventListener('visibilitychange',clsObserver,true);onPerfEntry({name:'cumulative-layout-shift',value:cumulativeScore});}},true);}}function observeLargestContentfulPaint(onPerfEntry){if(isTypeSupported('largest-contentful-paint')){// Create a variable to hold the latest LCP value (since it can change).\nvar lcp;// Create the PerformanceObserver instance.\nvar observer=new PerformanceObserver(entryList=>{var entries=entryList.getEntries();var lastEntry=entries[entries.length-1];lcp=lastEntry.renderTime||lastEntry.loadTime;});observer.observe({type:'largest-contentful-paint',buffered:true});document.addEventListener('visibilitychange',function lcpObserver(){if(lcp&&document.visibilityState==='hidden'){document.removeEventListener('visibilitychange',lcpObserver,true);onPerfEntry({name:'largest-contentful-paint',value:lcp});}},true);}}function observePaint(onPerfEntry){var observer=new PerformanceObserver(list=>{list.getEntries().forEach(onPerfEntry);});observer.observe({type:'paint',buffered:true});}"],"mappings":"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"},"metadata":{},"sourceType":"script"}