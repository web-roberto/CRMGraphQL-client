{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { SELECCIONAR_CLIENTE, SELECCIONAR_PRODUCTO, CANTIDAD_PRODUCTOS, ACTUALIZAR_TOTAL } from '../../types';\nexport default (function (state, action) {\n  switch (action.type) {\n    case SELECCIONAR_CLIENTE:\n      return _objectSpread({}, state, {\n        cliente: action.payload\n      });\n\n    case SELECCIONAR_PRODUCTO:\n      return _objectSpread({}, state, {\n        productos: action.payload\n      });\n\n    case CANTIDAD_PRODUCTOS:\n      return _objectSpread({}, state, {\n        productos: state.productos.map(function (producto) {\n          return producto.id === action.payload.id ? producto = action.payload : producto;\n        })\n      });\n\n    case ACTUALIZAR_TOTAL:\n      return _objectSpread({}, state, {\n        total: state.productos.reduce(function (nuevoTotal, articulo) {\n          return nuevoTotal += articulo.precio * articulo.cantidad;\n        }, 0)\n      });\n\n    default:\n      return state;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}