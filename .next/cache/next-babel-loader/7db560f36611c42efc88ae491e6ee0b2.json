{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"C:\\\\DESPLIEGUES\\\\APLICACIONES-EN-GITHUB\\\\portolio-apps\\\\web-development\\\\jp-crm-graphql\\\\crmcliente\\\\components\\\\pedidos\\\\AsignarProductos.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport Select from 'react-select';\nimport { gql, useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\nvar OBTENER_PRODUCTOS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    query obtenerProductos {\\n        obtenerProductos {\\n            id\\n            nombre\\n            precio\\n            existencia\\n        }\\n    }\\n\"])));\n\nvar AsignarProductos = function AsignarProductos() {\n  // state local del componente\n  var _useState = useState([]),\n      productos = _useState[0],\n      setProductos = _useState[1]; // Context de pedidos\n\n\n  var pedidoContext = useContext(PedidoContext);\n  var agregarProducto = pedidoContext.agregarProducto; // consulta a la base de datos\n\n  var _useQuery = useQuery(OBTENER_PRODUCTOS),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  useEffect(function () {\n    // TODO : Función para pasar a PedidoState.js\n    agregarProducto(productos);\n  }, [productos]);\n\n  var seleccionarProducto = function seleccionarProducto(producto) {\n    setProductos(producto);\n  };\n\n  if (loading) return null;\n  var obtenerProductos = data.obtenerProductos;\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"2.- Selecciona o busca los productos\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: obtenerProductos,\n    onChange: function onChange(opcion) {\n      return seleccionarProducto(opcion);\n    },\n    isMulti: true,\n    getOptionValue: function getOptionValue(opciones) {\n      return opciones.id;\n    },\n    getOptionLabel: function getOptionLabel(opciones) {\n      return \"\".concat(opciones.nombre, \" - \").concat(opciones.existencia, \" Disponibles\");\n    },\n    placeholder: \"Busque o Seleccione el Producto\",\n    noOptionsMessage: function noOptionsMessage() {\n      return \"No hay resultados\";\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default AsignarProductos;","map":{"version":3,"names":["React","useEffect","useState","useContext","Select","gql","useQuery","PedidoContext","OBTENER_PRODUCTOS","AsignarProductos","productos","setProductos","pedidoContext","agregarProducto","data","loading","error","seleccionarProducto","producto","obtenerProductos","opcion","opciones","id","nombre","existencia"],"sources":["C:/DESPLIEGUES/APLICACIONES-EN-GITHUB/portolio-apps/web-development/jp-crm-graphql/crmcliente/components/pedidos/AsignarProductos.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport Select from 'react-select';\nimport { gql, useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\n\n\nconst OBTENER_PRODUCTOS = gql`\n    query obtenerProductos {\n        obtenerProductos {\n            id\n            nombre\n            precio\n            existencia\n        }\n    }\n`;\n\n\nconst AsignarProductos = () => {\n\n    // state local del componente\n    const [ productos, setProductos ] = useState([]);\n\n    // Context de pedidos\n    const pedidoContext = useContext(PedidoContext);\n    const { agregarProducto } = pedidoContext;\n\n\n    // consulta a la base de datos\n    const { data, loading, error } = useQuery(OBTENER_PRODUCTOS);\n\n    useEffect(() => {\n        // TODO : Función para pasar a PedidoState.js\n        agregarProducto(productos);\n    }, [productos])\n\n    const seleccionarProducto = producto => {\n        setProductos(producto)\n    }\n\n    if(loading) return null;\n    const { obtenerProductos } = data;\n\n    return ( \n        <>\n            <p className=\"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\">2.- Selecciona o busca los productos</p>\n            <Select\n                className=\"mt-3\"\n                options={ obtenerProductos }\n                onChange={ opcion => seleccionarProducto(opcion) }\n                isMulti={true}\n                getOptionValue={ opciones => opciones.id }\n                getOptionLabel={ opciones => `${opciones.nombre} - ${opciones.existencia} Disponibles` }\n                placeholder=\"Busque o Seleccione el Producto\"\n                noOptionsMessage={() => \"No hay resultados\"}\n            />\n\n        </>\n     );\n}\n \nexport default AsignarProductos;"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAGA,IAAMC,iBAAiB,GAAGH,GAAH,mOAAvB;;AAYA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;EAE3B;EACA,gBAAoCP,QAAQ,CAAC,EAAD,CAA5C;EAAA,IAAQQ,SAAR;EAAA,IAAmBC,YAAnB,gBAH2B,CAK3B;;;EACA,IAAMC,aAAa,GAAGT,UAAU,CAACI,aAAD,CAAhC;EACA,IAAQM,eAAR,GAA4BD,aAA5B,CAAQC,eAAR,CAP2B,CAU3B;;EACA,gBAAiCP,QAAQ,CAACE,iBAAD,CAAzC;EAAA,IAAQM,IAAR,aAAQA,IAAR;EAAA,IAAcC,OAAd,aAAcA,OAAd;EAAA,IAAuBC,KAAvB,aAAuBA,KAAvB;;EAEAf,SAAS,CAAC,YAAM;IACZ;IACAY,eAAe,CAACH,SAAD,CAAf;EACH,CAHQ,EAGN,CAACA,SAAD,CAHM,CAAT;;EAKA,IAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,QAAQ,EAAI;IACpCP,YAAY,CAACO,QAAD,CAAZ;EACH,CAFD;;EAIA,IAAGH,OAAH,EAAY,OAAO,IAAP;EACZ,IAAQI,gBAAR,GAA6BL,IAA7B,CAAQK,gBAAR;EAEA,OACI,4BACI;IAAG,SAAS,EAAC,oFAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,0CADJ,EAEI,MAAC,MAAD;IACI,SAAS,EAAC,MADd;IAEI,OAAO,EAAGA,gBAFd;IAGI,QAAQ,EAAG,kBAAAC,MAAM;MAAA,OAAIH,mBAAmB,CAACG,MAAD,CAAvB;IAAA,CAHrB;IAII,OAAO,EAAE,IAJb;IAKI,cAAc,EAAG,wBAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,EAAb;IAAA,CAL7B;IAMI,cAAc,EAAG,wBAAAD,QAAQ;MAAA,iBAAOA,QAAQ,CAACE,MAAhB,gBAA4BF,QAAQ,CAACG,UAArC;IAAA,CAN7B;IAOI,WAAW,EAAC,iCAPhB;IAQI,gBAAgB,EAAE;MAAA,OAAM,mBAAN;IAAA,CARtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADJ;AAgBH,CAzCD;;AA2CA,eAAef,gBAAf"},"metadata":{},"sourceType":"module"}