{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _this = this,\n    _jsxFileName = \"C:\\\\DESPLIEGUES\\\\APLICACIONES-EN-GITHUB\\\\portolio-apps\\\\web-development\\\\jp-crm-graphql\\\\crmcliente\\\\components\\\\Pedido.js\";\n\nvar __jsx = React.createElement;\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useState, useEffect } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2';\nvar ACTUALIZAR_PEDIDO = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    mutation actualizarPedido($id: ID!, $input: PedidoInput ) {\\n        actualizarPedido(id: $id, input: $input) {\\n            estado\\n        }\\n    }\\n\"])));\nvar ELIMINAR_PEDIDO = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    mutation eliminarPedido($id: ID!) {\\n        eliminarPedido(id: $id) \\n    }\\n\"])));\nvar OBTENER_PEDIDOS = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  query obtenerPedidosVendedor {\\n      obtenerPedidosVendedor {\\n        id\\n      }\\n  }\\n\"])));\n\nvar Pedido = function Pedido(_ref) {\n  var pedido = _ref.pedido;\n  var id = pedido.id,\n      total = pedido.total,\n      _pedido$cliente = pedido.cliente,\n      nombre = _pedido$cliente.nombre,\n      apellido = _pedido$cliente.apellido,\n      telefono = _pedido$cliente.telefono,\n      email = _pedido$cliente.email,\n      estado = pedido.estado,\n      cliente = pedido.cliente; // Mutation para cambiar el estado de un pedido\n\n  var _useMutation = useMutation(ACTUALIZAR_PEDIDO),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      actualizarPedido = _useMutation2[0];\n\n  var _useMutation3 = useMutation(ELIMINAR_PEDIDO, {\n    update: function update(cache) {\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PEDIDOS\n      }),\n          obtenerPedidosVendedor = _cache$readQuery.obtenerPedidosVendedor;\n\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidosVendedor: obtenerPedidosVendedor.filter(function (pedido) {\n            return pedido.id !== id;\n          })\n        }\n      });\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      eliminarPedido = _useMutation4[0]; // console.log(pedido)\n\n\n  var _useState = useState(estado),\n      estadoPedido = _useState[0],\n      setEstadoPedido = _useState[1];\n\n  var _useState2 = useState(''),\n      clase = _useState2[0],\n      setClase = _useState2[1];\n\n  useEffect(function () {\n    if (estadoPedido) {\n      setEstadoPedido(estadoPedido);\n    }\n\n    clasePedido();\n  }, [estadoPedido]); // Función que modifica el color del pedido de acuerdo a su estado\n\n  var clasePedido = function clasePedido() {\n    if (estadoPedido === 'PENDIENTE') {\n      setClase('border-yellow-500');\n    } else if (estadoPedido === 'COMPLETADO') {\n      setClase('border-green-500');\n    } else {\n      setClase('border-red-800');\n    }\n  };\n\n  var cambiarEstadoPedido = function cambiarEstadoPedido(nuevoEstado) {\n    var _await$actualizarPedi, data;\n\n    return _regeneratorRuntime().async(function cambiarEstadoPedido$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime().awrap(actualizarPedido({\n              variables: {\n                id: id,\n                input: {\n                  estado: nuevoEstado,\n                  cliente: cliente.id\n                }\n              }\n            }));\n\n          case 3:\n            _await$actualizarPedi = _context.sent;\n            data = _await$actualizarPedi.data;\n            setEstadoPedido(data.actualizarPedido.estado);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var confirmarEliminarPedido = function confirmarEliminarPedido() {\n    Swal.fire({\n      title: '¿Deseas eliminar a este pedido?',\n      text: \"Esta acción no se puede deshacer\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Eliminar',\n      cancelButtonText: 'No, Cancelar'\n    }).then(function _callee(result) {\n      var data;\n      return _regeneratorRuntime().async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!result.value) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime().awrap(eliminarPedido({\n                variables: {\n                  id: id\n                }\n              }));\n\n            case 4:\n              data = _context2.sent;\n              Swal.fire('Eliminado', data.eliminarPedido, 'success');\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \" \".concat(clase, \" border-t-4 mt-4 bg-white rounded p-6 md:grid md:grid-cols-2 md:gap-4 shadow-lg\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold text-gray-800\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Cliente: \", nombre, \" \", apellido, \" \"), email && __jsx(\"p\", {\n    className: \"flex items-center my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, __jsx(\"path\", {\n    d: \"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 170\n    }\n  })), email), telefono && __jsx(\"p\", {\n    className: \"flex items-center my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, __jsx(\"path\", {\n    d: \"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 170\n    }\n  })), telefono), __jsx(\"h2\", {\n    className: \"text-gray-800 font-bold mt-10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Estado Pedido:\"), __jsx(\"select\", {\n    className: \"mt-2 appearance-none bg-blue-600 border border-blue-600 text-white p-2 text-center rounded leading-tight focus:outline-none focus:bg-blue-600 focus:border-blue-500 uppercase text-xs font-bold \",\n    value: estadoPedido,\n    onChange: function onChange(e) {\n      return cambiarEstadoPedido(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, __jsx(\"option\", {\n    value: \"COMPLETADO\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, \"COMPLETADO\"), __jsx(\"option\", {\n    value: \"PENDIENTE\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"PENDIENTE\"), __jsx(\"option\", {\n    value: \"CANCELADO\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"CANCELADO\"))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-gray-800 font-bold mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, \"Resumen del Pedido\"), pedido.pedido.map(function (articulo) {\n    return __jsx(\"div\", {\n      key: articulo.id,\n      className: \"mt-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      className: \"text-sm text-gray-600\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, \"Producto: \", articulo.nombre, \" \"), __jsx(\"p\", {\n      className: \"text-sm text-gray-600\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, \"Cantidad: \", articulo.cantidad, \" \"));\n  }), __jsx(\"p\", {\n    className: \"text-gray-800 mt-3 font-bold \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Total a pagar:\", __jsx(\"span\", {\n    className: \"font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, \" $ \", total)), __jsx(\"button\", {\n    className: \"uppercase text-xs font-bold  flex items-center mt-4 bg-red-800 px-5 py-2 inline-block text-white rounded leading-tight\",\n    onClick: function onClick() {\n      return confirmarEliminarPedido();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, \"Eliminar Pedido\", __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 ml-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, __jsx(\"path\", {\n    d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 166\n    }\n  })))));\n};\n\nexport default Pedido;","map":{"version":3,"names":["React","useState","useEffect","gql","useMutation","Swal","ACTUALIZAR_PEDIDO","ELIMINAR_PEDIDO","OBTENER_PEDIDOS","Pedido","pedido","id","total","cliente","nombre","apellido","telefono","email","estado","actualizarPedido","update","cache","readQuery","query","obtenerPedidosVendedor","writeQuery","data","filter","eliminarPedido","estadoPedido","setEstadoPedido","clase","setClase","clasePedido","cambiarEstadoPedido","nuevoEstado","variables","input","console","log","confirmarEliminarPedido","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","e","target","map","articulo","cantidad"],"sources":["C:/DESPLIEGUES/APLICACIONES-EN-GITHUB/portolio-apps/web-development/jp-crm-graphql/crmcliente/components/Pedido.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2'\n\nconst ACTUALIZAR_PEDIDO = gql`\n    mutation actualizarPedido($id: ID!, $input: PedidoInput ) {\n        actualizarPedido(id: $id, input: $input) {\n            estado\n        }\n    }\n`;\nconst ELIMINAR_PEDIDO = gql`\n    mutation eliminarPedido($id: ID!) {\n        eliminarPedido(id: $id) \n    }\n`\n\nconst OBTENER_PEDIDOS = gql`\n  query obtenerPedidosVendedor {\n      obtenerPedidosVendedor {\n        id\n      }\n  }\n`\n\nconst Pedido = ({pedido}) => {\n\n\n    const { id, total, cliente: { nombre, apellido, telefono, email }, estado, cliente } = pedido;\n\n\n    // Mutation para cambiar el estado de un pedido\n    const [ actualizarPedido ] = useMutation(ACTUALIZAR_PEDIDO)\n    const [ eliminarPedido] = useMutation(ELIMINAR_PEDIDO, {\n        update(cache) {\n            const { obtenerPedidosVendedor } = cache.readQuery({\n                query: OBTENER_PEDIDOS\n            });\n\n            cache.writeQuery({\n                query: OBTENER_PEDIDOS,\n                data: {\n                    obtenerPedidosVendedor: obtenerPedidosVendedor.filter( pedido => pedido.id !== id )\n                }\n            })\n        }\n    })\n\n    // console.log(pedido)\n\n    const [ estadoPedido, setEstadoPedido ] = useState(estado);\n    const [ clase, setClase ] = useState('');\n\n    useEffect(() => {\n        if(estadoPedido) {\n            setEstadoPedido(estadoPedido)\n        }\n        clasePedido();\n    }, [ estadoPedido ]);\n\n    // Función que modifica el color del pedido de acuerdo a su estado\n    const clasePedido = () => {\n        if(estadoPedido === 'PENDIENTE') {\n            setClase('border-yellow-500')\n        } else if (estadoPedido === 'COMPLETADO') {\n            setClase('border-green-500')\n        } else {\n            setClase('border-red-800')\n        }\n    }\n\n    const cambiarEstadoPedido = async nuevoEstado => {\n        try {\n            const { data } = await actualizarPedido({\n                variables: {\n                    id, \n                    input: {\n                        estado: nuevoEstado,\n                        cliente: cliente.id\n                    }\n                }\n            });\n\n            setEstadoPedido(data.actualizarPedido.estado);\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const confirmarEliminarPedido = () => {\n\n        Swal.fire({\n            title: '¿Deseas eliminar a este pedido?',\n            text: \"Esta acción no se puede deshacer\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, Eliminar',\n            cancelButtonText: 'No, Cancelar'\n          }).then( async (result) => {\n            if (result.value) {\n                try {\n                    const data = await eliminarPedido({\n                        variables: {\n                            id\n                        }\n                    });\n\n                    Swal.fire(\n                        'Eliminado',\n                        data.eliminarPedido,\n                        'success'\n                    );\n\n\n                } catch (error) {\n                    console.log(error)\n                }\n                \n            }\n          })\n    }\n\n    return ( \n        <div className={` ${clase} border-t-4 mt-4 bg-white rounded p-6 md:grid md:grid-cols-2 md:gap-4 shadow-lg`}>\n            <div>\n                <p className=\"font-bold text-gray-800\">Cliente: {nombre} {apellido} </p>\n\n                {email && (\n                    <p className=\"flex items-center my-2\">\n                        <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" className=\"w-4 h-4 mr-2\"><path d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path></svg>\n                        {email}\n                    </p>\n                )}\n\n                {telefono && (\n                    <p className=\"flex items-center my-2\">\n                        <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" className=\"w-4 h-4 mr-2\"><path d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"></path></svg>\n                        {telefono}\n                    </p>\n                )}\n\n                <h2 className=\"text-gray-800 font-bold mt-10\">Estado Pedido:</h2>\n\n                <select\n                    className=\"mt-2 appearance-none bg-blue-600 border border-blue-600 text-white p-2 text-center rounded leading-tight focus:outline-none focus:bg-blue-600 focus:border-blue-500 uppercase text-xs font-bold \"\n                    value={estadoPedido}\n                    onChange={ e => cambiarEstadoPedido( e.target.value )  }\n                >\n                    <option value=\"COMPLETADO\">COMPLETADO</option>\n                    <option value=\"PENDIENTE\">PENDIENTE</option>\n                    <option value=\"CANCELADO\">CANCELADO</option>\n                </select>\n            </div>\n\n            <div>\n                <h2 className=\"text-gray-800 font-bold mt-2\">Resumen del Pedido</h2>\n                { pedido.pedido.map( articulo => (\n                    <div key={articulo.id} className=\"mt-4\">\n                        <p className=\"text-sm text-gray-600\">Producto: {articulo.nombre} </p>\n                        <p className=\"text-sm text-gray-600\">Cantidad: {articulo.cantidad} </p>\n                    </div>\n                ) ) }\n\n                <p className=\"text-gray-800 mt-3 font-bold \">Total a pagar:\n                    <span className=\"font-light\"> $ {total}</span>\n                </p>\n\n                <button\n                    className=\"uppercase text-xs font-bold  flex items-center mt-4 bg-red-800 px-5 py-2 inline-block text-white rounded leading-tight\"\n                    onClick={ () => confirmarEliminarPedido() }\n                >\n                    Eliminar Pedido\n\n                    <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" className=\"w-4 h-4 ml-2\"><path d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n\n                </button>\n            </div>\n        </div>\n     );\n}\n \nexport default Pedido;"],"mappings":"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"},"metadata":{},"sourceType":"module"}