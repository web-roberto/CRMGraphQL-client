{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Cliente from '../components/Cliente';\nimport { gql, useQuery } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nvar OBTENER_CLIENTES_USUARIO = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    query obtenerClientesVendedor {\\n        obtenerClientesVendedor {\\n            id\\n            nombre\\n            apellido\\n            empresa\\n            email\\n        }\\n    }\\n\"])));\n\nvar Index = function Index() {\n  var router = useRouter(); // Consulta de Apollo\n\n  var _useQuery = useQuery(OBTENER_CLIENTES_USUARIO),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // console.log(data)\n  // console.log(loading)\n  // console.log(error)\n\n\n  if (loading) return 'Cargando....';\n\n  if (!data.obtenerClientesVendedor) {\n    return router.push('/login');\n  }\n\n  return __jsx(\"div\", null, __jsx(Layout, null, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\"\n  }, \"Clientes\"), __jsx(Link, {\n    href: \"/nuevocliente\"\n  }, __jsx(\"a\", {\n    className: \"bg-blue-800 py-2 px-5 mt-3 inline-block text-white rounded text-sm hover:bg-gray-800 mb-3 uppercase font-bold w-full lg:w-auto text-center\"\n  }, \"Nuevo Cliente\")), __jsx(\"div\", {\n    className: \"overflow-x-scroll\"\n  }, __jsx(\"table\", {\n    className: \"table-auto shadow-md mt-10 w-full w-lg\"\n  }, __jsx(\"thead\", {\n    className: \"bg-gray-800\"\n  }, __jsx(\"tr\", {\n    className: \"text-white\"\n  }, __jsx(\"th\", {\n    className: \"w-1/5 py-2\"\n  }, \"Nombre\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\"\n  }, \"Empresa\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\"\n  }, \"Email\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\"\n  }, \"Eliminar\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\"\n  }, \"Editar\"))), __jsx(\"tbody\", {\n    className: \"bg-white\"\n  }, data.obtenerClientesVendedor.map(function (cliente) {\n    return __jsx(Cliente, {\n      key: cliente.id,\n      cliente: cliente\n    });\n  }))))));\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}