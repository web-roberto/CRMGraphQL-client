{"ast":null,"code":"var _jsxFileName = \"C:\\\\DESPLIEGUES\\\\APLICACIONES-EN-GITHUB\\\\portolio-apps\\\\web-development\\\\jp-crm-graphql\\\\crmcliente\\\\components\\\\pedidos\\\\ProductoResumen.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\n\nconst ProductoResumen = ({\n  producto\n}) => {\n  // Context de pedidos\n  const pedidoContext = useContext(PedidoContext);\n  const {\n    cantidadProductos,\n    actualizarTotal\n  } = pedidoContext;\n  const {\n    0: cantidad,\n    1: setCantidad\n  } = useState(0);\n  useEffect(() => {\n    actualizarCantidad();\n    actualizarTotal();\n  }, [cantidad]);\n\n  const actualizarCantidad = () => {\n    const nuevoProducto = _objectSpread({}, producto, {\n      cantidad: Number(cantidad)\n    });\n\n    cantidadProductos(nuevoProducto);\n  };\n\n  const {\n    nombre,\n    precio\n  } = producto;\n  return __jsx(\"div\", {\n    className: \"md:flex md:justify-between md:items-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"md:w-2/4 mb-2 md:mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, nombre), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"$ \", precio)), __jsx(\"input\", {\n    type: \"number\",\n    placeholder: \"Cantidad\",\n    className: \"shadow apperance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline md:ml-4\",\n    onChange: e => setCantidad(e.target.value),\n    value: cantidad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ProductoResumen;","map":{"version":3,"names":["React","useContext","useState","useEffect","PedidoContext","ProductoResumen","producto","pedidoContext","cantidadProductos","actualizarTotal","cantidad","setCantidad","actualizarCantidad","nuevoProducto","Number","nombre","precio","e","target","value"],"sources":["C:/DESPLIEGUES/APLICACIONES-EN-GITHUB/portolio-apps/web-development/jp-crm-graphql/crmcliente/components/pedidos/ProductoResumen.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\n\nconst ProductoResumen = ({producto}) => {\n\n    // Context de pedidos\n    const pedidoContext = useContext(PedidoContext);\n    const { cantidadProductos, actualizarTotal } = pedidoContext;\n\n    const [cantidad, setCantidad] = useState(0);\n\n    useEffect(() => {\n        actualizarCantidad();\n        actualizarTotal();\n    }, [ cantidad ])\n\n    const actualizarCantidad = () => {\n        const nuevoProducto = {...producto, cantidad: Number( cantidad )  }\n        cantidadProductos(nuevoProducto)\n    }\n\n    const { nombre, precio } = producto;\n\n    return ( \n        <div className=\"md:flex md:justify-between md:items-center mt-5\">\n            <div className=\"md:w-2/4 mb-2 md:mb-0\">\n                <p className=\"text-sm\">{nombre}</p>\n                <p>$ {precio}</p>\n            </div>\n\n            <input \n                type=\"number\"\n                placeholder=\"Cantidad\"\n                className=\"shadow apperance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline md:ml-4\"\n                onChange={ e => setCantidad(e.target.value) }\n                value={cantidad}\n            />\n        </div>\n     );\n}\n \nexport default ProductoResumen;"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,aAAP,MAA0B,qCAA1B;;AAEA,MAAMC,eAAe,GAAG,CAAC;EAACC;AAAD,CAAD,KAAgB;EAEpC;EACA,MAAMC,aAAa,GAAGN,UAAU,CAACG,aAAD,CAAhC;EACA,MAAM;IAAEI,iBAAF;IAAqBC;EAArB,IAAyCF,aAA/C;EAEA,MAAM;IAAA,GAACG,QAAD;IAAA,GAAWC;EAAX,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;EAEAC,SAAS,CAAC,MAAM;IACZS,kBAAkB;IAClBH,eAAe;EAClB,CAHQ,EAGN,CAAEC,QAAF,CAHM,CAAT;;EAKA,MAAME,kBAAkB,GAAG,MAAM;IAC7B,MAAMC,aAAa,qBAAOP,QAAP;MAAiBI,QAAQ,EAAEI,MAAM,CAAEJ,QAAF;IAAjC,EAAnB;;IACAF,iBAAiB,CAACK,aAAD,CAAjB;EACH,CAHD;;EAKA,MAAM;IAAEE,MAAF;IAAUC;EAAV,IAAqBV,QAA3B;EAEA,OACI;IAAK,SAAS,EAAC,iDAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI;IAAK,SAAS,EAAC,uBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI;IAAG,SAAS,EAAC,SAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAwBS,MAAxB,CADJ,EAEI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SAAMC,MAAN,CAFJ,CADJ,EAMI;IACI,IAAI,EAAC,QADT;IAEI,WAAW,EAAC,UAFhB;IAGI,SAAS,EAAC,mIAHd;IAII,QAAQ,EAAGC,CAAC,IAAIN,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ/B;IAKI,KAAK,EAAET,QALX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EANJ,CADJ;AAgBH,CApCD;;AAsCA,eAAeL,eAAf"},"metadata":{},"sourceType":"module"}