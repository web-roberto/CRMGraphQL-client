{"ast":null,"code":"var _jsxFileName = \"C:\\\\DESPLIEGUES\\\\APLICACIONES-EN-GITHUB\\\\portolio-apps\\\\web-development\\\\jp-crm-graphql\\\\crmcliente\\\\context\\\\pedidos\\\\PedidoState.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer } from 'react';\nimport PedidoContext from './PedidoContext';\nimport PedidoReducer from './PedidoReducer';\nimport { SELECCIONAR_CLIENTE, SELECCIONAR_PRODUCTO, CANTIDAD_PRODUCTOS, ACTUALIZAR_TOTAL } from '../../types';\n\nconst PedidoState = ({\n  children\n}) => {\n  // State de Pedidos\n  const initialState = {\n    cliente: {},\n    productos: [],\n    total: 0\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(PedidoReducer, initialState); // Modifica el Cliente\n\n  const agregarCliente = cliente => {\n    // console.log(cliente);\n    dispatch({\n      type: SELECCIONAR_CLIENTE,\n      payload: cliente\n    });\n  }; // Modifica los productos\n\n\n  const agregarProducto = productosSeleccionados => {\n    let nuevoState;\n\n    if (state.productos.length > 0) {\n      // Tomar del segundo arreglo, una copia para asignarlo al primero\n      nuevoState = productosSeleccionados.map(producto => {\n        const nuevoObjeto = state.productos.find(productoState => productoState.id === producto.id);\n        return _objectSpread({}, producto, {}, nuevoObjeto);\n      });\n    } else {\n      nuevoState = productosSeleccionados;\n    }\n\n    dispatch({\n      type: SELECCIONAR_PRODUCTO,\n      payload: nuevoState\n    });\n  }; // Modifica las cantidades de los productos\n\n\n  const cantidadProductos = nuevoProducto => {\n    dispatch({\n      type: CANTIDAD_PRODUCTOS,\n      payload: nuevoProducto\n    });\n  };\n\n  const actualizarTotal = () => {\n    dispatch({\n      type: ACTUALIZAR_TOTAL\n    });\n  };\n\n  return __jsx(PedidoContext.Provider, {\n    value: {\n      cliente: state.cliente,\n      productos: state.productos,\n      total: state.total,\n      agregarCliente,\n      agregarProducto,\n      cantidadProductos,\n      actualizarTotal\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \" \", children);\n};\n\nexport default PedidoState;","map":{"version":3,"names":["React","useReducer","PedidoContext","PedidoReducer","SELECCIONAR_CLIENTE","SELECCIONAR_PRODUCTO","CANTIDAD_PRODUCTOS","ACTUALIZAR_TOTAL","PedidoState","children","initialState","cliente","productos","total","state","dispatch","agregarCliente","type","payload","agregarProducto","productosSeleccionados","nuevoState","length","map","producto","nuevoObjeto","find","productoState","id","cantidadProductos","nuevoProducto","actualizarTotal"],"sources":["C:/DESPLIEGUES/APLICACIONES-EN-GITHUB/portolio-apps/web-development/jp-crm-graphql/crmcliente/context/pedidos/PedidoState.js"],"sourcesContent":["import  React, { useReducer } from 'react';\nimport PedidoContext from './PedidoContext';\nimport PedidoReducer from './PedidoReducer';\n\nimport {\n    SELECCIONAR_CLIENTE,\n    SELECCIONAR_PRODUCTO,\n    CANTIDAD_PRODUCTOS,\n    ACTUALIZAR_TOTAL\n} from '../../types'\n\nconst PedidoState = ({children}) => {\n\n    // State de Pedidos\n    const initialState = {\n        cliente: {},\n        productos: [],\n        total: 0\n    }\n\n    const [ state, dispatch ] = useReducer(PedidoReducer, initialState);\n\n    // Modifica el Cliente\n    const agregarCliente = cliente => {\n        // console.log(cliente);\n\n        dispatch({\n            type: SELECCIONAR_CLIENTE,\n            payload: cliente\n        })\n    }\n\n    // Modifica los productos\n    const agregarProducto = productosSeleccionados => {\n\n        let nuevoState;\n        if(state.productos.length > 0 ) {\n            // Tomar del segundo arreglo, una copia para asignarlo al primero\n            nuevoState = productosSeleccionados.map( producto => {\n                const nuevoObjeto = state.productos.find( productoState => productoState.id === producto.id  );\n                return {...producto, ...nuevoObjeto }\n            } )\n        } else {\n            nuevoState = productosSeleccionados;\n        }\n       \n        dispatch({\n            type: SELECCIONAR_PRODUCTO,\n            payload: nuevoState\n        })\n    }\n\n    // Modifica las cantidades de los productos\n    const cantidadProductos = nuevoProducto => {\n        dispatch({\n            type: CANTIDAD_PRODUCTOS,\n            payload: nuevoProducto\n        })\n    }\n\n    const actualizarTotal = () => {\n        dispatch({\n            type: ACTUALIZAR_TOTAL\n        })\n    }\n\n\n    return (\n        <PedidoContext.Provider\n            value={{\n                cliente: state.cliente,\n                productos: state.productos,\n                total: state.total,\n                agregarCliente,\n                agregarProducto,\n                cantidadProductos,\n                actualizarTotal\n            }}\n        > {children}\n        </PedidoContext.Provider>\n    )\n}\n\nexport default PedidoState;"],"mappings":";;;;;;;;;AAAA,OAAQA,KAAR,IAAiBC,UAAjB,QAAmC,OAAnC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SACIC,mBADJ,EAEIC,oBAFJ,EAGIC,kBAHJ,EAIIC,gBAJJ,QAKO,aALP;;AAOA,MAAMC,WAAW,GAAG,CAAC;EAACC;AAAD,CAAD,KAAgB;EAEhC;EACA,MAAMC,YAAY,GAAG;IACjBC,OAAO,EAAE,EADQ;IAEjBC,SAAS,EAAE,EAFM;IAGjBC,KAAK,EAAE;EAHU,CAArB;EAMA,MAAM;IAAA,GAAEC,KAAF;IAAA,GAASC;EAAT,IAAsBd,UAAU,CAACE,aAAD,EAAgBO,YAAhB,CAAtC,CATgC,CAWhC;;EACA,MAAMM,cAAc,GAAGL,OAAO,IAAI;IAC9B;IAEAI,QAAQ,CAAC;MACLE,IAAI,EAAEb,mBADD;MAELc,OAAO,EAAEP;IAFJ,CAAD,CAAR;EAIH,CAPD,CAZgC,CAqBhC;;;EACA,MAAMQ,eAAe,GAAGC,sBAAsB,IAAI;IAE9C,IAAIC,UAAJ;;IACA,IAAGP,KAAK,CAACF,SAAN,CAAgBU,MAAhB,GAAyB,CAA5B,EAAgC;MAC5B;MACAD,UAAU,GAAGD,sBAAsB,CAACG,GAAvB,CAA4BC,QAAQ,IAAI;QACjD,MAAMC,WAAW,GAAGX,KAAK,CAACF,SAAN,CAAgBc,IAAhB,CAAsBC,aAAa,IAAIA,aAAa,CAACC,EAAd,KAAqBJ,QAAQ,CAACI,EAArE,CAApB;QACA,yBAAWJ,QAAX,MAAwBC,WAAxB;MACH,CAHY,CAAb;IAIH,CAND,MAMO;MACHJ,UAAU,GAAGD,sBAAb;IACH;;IAEDL,QAAQ,CAAC;MACLE,IAAI,EAAEZ,oBADD;MAELa,OAAO,EAAEG;IAFJ,CAAD,CAAR;EAIH,CAjBD,CAtBgC,CAyChC;;;EACA,MAAMQ,iBAAiB,GAAGC,aAAa,IAAI;IACvCf,QAAQ,CAAC;MACLE,IAAI,EAAEX,kBADD;MAELY,OAAO,EAAEY;IAFJ,CAAD,CAAR;EAIH,CALD;;EAOA,MAAMC,eAAe,GAAG,MAAM;IAC1BhB,QAAQ,CAAC;MACLE,IAAI,EAAEV;IADD,CAAD,CAAR;EAGH,CAJD;;EAOA,OACI,MAAC,aAAD,CAAe,QAAf;IACI,KAAK,EAAE;MACHI,OAAO,EAAEG,KAAK,CAACH,OADZ;MAEHC,SAAS,EAAEE,KAAK,CAACF,SAFd;MAGHC,KAAK,EAAEC,KAAK,CAACD,KAHV;MAIHG,cAJG;MAKHG,eALG;MAMHU,iBANG;MAOHE;IAPG,CADX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,QAUGtB,QAVH,CADJ;AAcH,CAtED;;AAwEA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}