{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Swal from 'sweetalert2';\nimport { gql, useMutation } from '@apollo/client';\nimport Router from 'next/router';\nconst ELIMINAR_CLIENTE = gql`\n    mutation eliminarCliente($id: ID!) {\n        eliminarCliente(id:$id) \n    }\n`;\nconst OBTENER_CLIENTES_USUARIO = gql`\n    query obtenerClientesVendedor {\n        obtenerClientesVendedor {\n            id\n            nombre\n            apellido\n            empresa\n            email\n        }\n    }\n\n`;\n\nconst Cliente = ({\n  cliente\n}) => {\n  // mutation para eliminar cliente\n  const [eliminarCliente] = useMutation(ELIMINAR_CLIENTE, {\n    update(cache) {\n      // obtener una copia del objeto de cache\n      const {\n        obtenerClientesVendedor\n      } = cache.readQuery({\n        query: OBTENER_CLIENTES_USUARIO\n      }); // Reescribir el cache\n\n      cache.writeQuery({\n        query: OBTENER_CLIENTES_USUARIO,\n        data: {\n          obtenerClientesVendedor: obtenerClientesVendedor.filter(clienteActual => clienteActual.id !== id)\n        }\n      });\n    }\n\n  });\n  const {\n    nombre,\n    apellido,\n    empresa,\n    email,\n    id\n  } = cliente; // Elimina un cliente\n\n  const confirmarEliminarCliente = () => {\n    Swal.fire({\n      title: '¿Deseas eliminar a este cliente?',\n      text: \"Esta acción no se puede deshacer\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Eliminar',\n      cancelButtonText: 'No, Cancelar'\n    }).then(async result => {\n      if (result.value) {\n        try {\n          // Eliminar por ID\n          const {\n            data\n          } = await eliminarCliente({\n            variables: {\n              id\n            }\n          }); // console.log(data);\n          // Mostrar una alerta\n\n          Swal.fire('Eliminado!', data.eliminarCliente, 'success');\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    });\n  };\n\n  const editarCliente = () => {\n    Router.push({\n      pathname: \"/editarcliente/[id]\",\n      query: {\n        id\n      }\n    });\n  };\n\n  return __jsx(\"tr\", null, __jsx(\"td\", {\n    className: \"border px-4 py-2\"\n  }, nombre, \"  \", apellido), __jsx(\"td\", {\n    className: \"border px-4 py-2\"\n  }, empresa), __jsx(\"td\", {\n    className: \"border px-4 py-2\"\n  }, email), __jsx(\"td\", {\n    className: \"border px-4 py-2\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"flex justify-center items-center bg-red-800 py-2 px-4 w-full text-white rounded text-xs uppercase font-bold\",\n    onClick: () => confirmarEliminarCliente()\n  }, \"Eliminar\", __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 ml-2\"\n  }, __jsx(\"path\", {\n    d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n  })))), __jsx(\"td\", {\n    className: \"border px-4 py-2\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"flex justify-center items-center bg-green-600 py-2 px-4 w-full text-white rounded text-xs uppercase font-bold\",\n    onClick: () => editarCliente()\n  }, \"Editar\", __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 ml-2\"\n  }, __jsx(\"path\", {\n    d: \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n  })))));\n};\n\nexport default Cliente;","map":null,"metadata":{},"sourceType":"module"}