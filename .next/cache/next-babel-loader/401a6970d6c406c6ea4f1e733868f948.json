{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/Layout';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Swal from 'sweetalert2';\nconst OBTENER_CLIENTE = gql`\n    query obtenerCliente($id:ID!) {\n        obtenerCliente(id:$id) {\n            nombre\n            apellido\n            email\n            telefono\n            empresa\n        }\n    }\n`;\nconst ACTUALIZAR_CLIENTE = gql`\n    mutation actualizarCliente($id: ID!, $input: ClienteInput) {\n        actualizarCliente(id: $id, input: $input) {\n            nombre\n            email\n        }\n    }\n`;\n\nconst EditarCliente = () => {\n  // obtener el ID actual\n  const router = useRouter();\n  const {\n    query: {\n      id\n    }\n  } = router; // console.log(id)\n  // Consultar para obtener el cliente\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_CLIENTE, {\n    variables: {\n      id\n    }\n  }); // Actualizar el cliente\n\n  const [actualizarCliente] = useMutation(ACTUALIZAR_CLIENTE); // Schema de validacion\n\n  const schemaValidacion = Yup.object({\n    nombre: Yup.string().required('El nombre del cliente es obligatorio'),\n    apellido: Yup.string().required('El apellido del cliente es obligatorio'),\n    empresa: Yup.string().required('El campo empresa  es obligatorio'),\n    email: Yup.string().email('Email no válido').required('El email del cliente es obligatorio')\n  });\n  if (loading) return 'Cargando...'; // console.log(data.obtenerCliente)\n\n  const {\n    obtenerCliente\n  } = data; // Modifica el cliente en la BD\n\n  const actualizarInfoCliente = async valores => {\n    const {\n      nombre,\n      apellido,\n      empresa,\n      email,\n      telefono\n    } = valores;\n\n    try {\n      const {\n        data\n      } = await actualizarCliente({\n        variables: {\n          id,\n          input: {\n            nombre,\n            apellido,\n            empresa,\n            email,\n            telefono\n          }\n        }\n      }); // console.log(data);\n      // Mostrar Alerta\n\n      Swal.fire('Actualizado', 'El cliente se actualizó correctamente', 'success'); // Redireccionar\n\n      router.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(Layout, null, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\"\n  }, \"Editar Cliente\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\"\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\"\n  }, __jsx(Formik, {\n    validationSchema: schemaValidacion,\n    enableReinitialize: true,\n    initialValues: obtenerCliente,\n    onSubmit: valores => {\n      actualizarInfoCliente(valores);\n    }\n  }, props => {\n    // console.log(props);\n    return __jsx(\"form\", {\n      className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4\",\n      onSubmit: props.handleSubmit\n    }, __jsx(\"div\", {\n      className: \"mb-4\"\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"nombre\"\n    }, \"Nombre\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"nombre\",\n      type: \"text\",\n      placeholder: \"Nombre Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.nombre\n    })), props.touched.nombre && props.errors.nombre ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\n    }, __jsx(\"p\", {\n      className: \"font-bold\"\n    }, \"Error\"), __jsx(\"p\", null, props.errors.nombre)) : null, __jsx(\"div\", {\n      className: \"mb-4\"\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"apellido\"\n    }, \"Apellido\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"apellido\",\n      type: \"text\",\n      placeholder: \"Apellido Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.apellido\n    })), props.touched.apellido && props.errors.apellido ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\n    }, __jsx(\"p\", {\n      className: \"font-bold\"\n    }, \"Error\"), __jsx(\"p\", null, props.errors.apellido)) : null, __jsx(\"div\", {\n      className: \"mb-4\"\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"empresa\"\n    }, \"Empresa\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"empresa\",\n      type: \"text\",\n      placeholder: \"Empresa Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.empresa\n    })), props.touched.empresa && props.errors.empresa ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\n    }, __jsx(\"p\", {\n      className: \"font-bold\"\n    }, \"Error\"), __jsx(\"p\", null, props.errors.empresa)) : null, __jsx(\"div\", {\n      className: \"mb-4\"\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"email\"\n    }, \"Email\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"email\",\n      type: \"email\",\n      placeholder: \"Email Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.email\n    })), props.touched.email && props.errors.email ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\n    }, __jsx(\"p\", {\n      className: \"font-bold\"\n    }, \"Error\"), __jsx(\"p\", null, props.errors.email)) : null, __jsx(\"div\", {\n      className: \"mb-4\"\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"telefono\"\n    }, \"Tel\\xE9fono\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"telefono\",\n      type: \"tel\",\n      placeholder: \"Tel\\xE9fono Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.telefono\n    })), __jsx(\"input\", {\n      type: \"submit\",\n      className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n      value: \"Editar Cliente\"\n    }));\n  }), \"\\xA0\")));\n};\n\nexport default EditarCliente;","map":null,"metadata":{},"sourceType":"module"}