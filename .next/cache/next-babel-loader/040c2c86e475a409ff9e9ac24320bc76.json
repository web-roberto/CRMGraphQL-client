{"ast":null,"code":"var _jsxFileName = \"C:\\\\DESPLIEGUES\\\\APLICACIONES-EN-GITHUB\\\\portolio-apps\\\\web-development\\\\jp-crm-graphql\\\\crmcliente\\\\components\\\\pedidos\\\\AsignarProductos.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport Select from 'react-select';\nimport { gql, useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\nconst OBTENER_PRODUCTOS = gql`\n    query obtenerProductos {\n        obtenerProductos {\n            id\n            nombre\n            precio\n            existencia\n        }\n    }\n`;\n\nconst AsignarProductos = () => {\n  // state local del componente\n  const {\n    0: productos,\n    1: setProductos\n  } = useState([]); // Context de pedidos\n\n  const pedidoContext = useContext(PedidoContext);\n  const {\n    agregarProducto\n  } = pedidoContext; // consulta a la base de datos\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_PRODUCTOS);\n  useEffect(() => {\n    // TODO : Función para pasar a PedidoState.js\n    agregarProducto(productos);\n  }, [productos]);\n\n  const seleccionarProducto = producto => {\n    setProductos(producto);\n  };\n\n  if (loading) return null;\n  const {\n    obtenerProductos\n  } = data;\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"2.- Selecciona o busca los productos\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: obtenerProductos,\n    onChange: opcion => seleccionarProducto(opcion),\n    isMulti: true,\n    getOptionValue: opciones => opciones.id,\n    getOptionLabel: opciones => `${opciones.nombre} - ${opciones.existencia} Disponibles`,\n    placeholder: \"Busque o Seleccione el Producto\",\n    noOptionsMessage: () => \"No hay resultados\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default AsignarProductos;","map":{"version":3,"names":["React","useEffect","useState","useContext","Select","gql","useQuery","PedidoContext","OBTENER_PRODUCTOS","AsignarProductos","productos","setProductos","pedidoContext","agregarProducto","data","loading","error","seleccionarProducto","producto","obtenerProductos","opcion","opciones","id","nombre","existencia"],"sources":["C:/DESPLIEGUES/APLICACIONES-EN-GITHUB/portolio-apps/web-development/jp-crm-graphql/crmcliente/components/pedidos/AsignarProductos.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport Select from 'react-select';\nimport { gql, useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\n\n\nconst OBTENER_PRODUCTOS = gql`\n    query obtenerProductos {\n        obtenerProductos {\n            id\n            nombre\n            precio\n            existencia\n        }\n    }\n`;\n\n\nconst AsignarProductos = () => {\n\n    // state local del componente\n    const [ productos, setProductos ] = useState([]);\n\n    // Context de pedidos\n    const pedidoContext = useContext(PedidoContext);\n    const { agregarProducto } = pedidoContext;\n\n\n    // consulta a la base de datos\n    const { data, loading, error } = useQuery(OBTENER_PRODUCTOS);\n\n    useEffect(() => {\n        // TODO : Función para pasar a PedidoState.js\n        agregarProducto(productos);\n    }, [productos])\n\n    const seleccionarProducto = producto => {\n        setProductos(producto)\n    }\n\n    if(loading) return null;\n    const { obtenerProductos } = data;\n\n    return ( \n        <>\n            <p className=\"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\">2.- Selecciona o busca los productos</p>\n            <Select\n                className=\"mt-3\"\n                options={ obtenerProductos }\n                onChange={ opcion => seleccionarProducto(opcion) }\n                isMulti={true}\n                getOptionValue={ opciones => opciones.id }\n                getOptionLabel={ opciones => `${opciones.nombre} - ${opciones.existencia} Disponibles` }\n                placeholder=\"Busque o Seleccione el Producto\"\n                noOptionsMessage={() => \"No hay resultados\"}\n            />\n\n        </>\n     );\n}\n \nexport default AsignarProductos;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAGA,MAAMC,iBAAiB,GAAGH,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAYA,MAAMI,gBAAgB,GAAG,MAAM;EAE3B;EACA,MAAM;IAAA,GAAEC,SAAF;IAAA,GAAaC;EAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C,CAH2B,CAK3B;;EACA,MAAMU,aAAa,GAAGT,UAAU,CAACI,aAAD,CAAhC;EACA,MAAM;IAAEM;EAAF,IAAsBD,aAA5B,CAP2B,CAU3B;;EACA,MAAM;IAAEE,IAAF;IAAQC,OAAR;IAAiBC;EAAjB,IAA2BV,QAAQ,CAACE,iBAAD,CAAzC;EAEAP,SAAS,CAAC,MAAM;IACZ;IACAY,eAAe,CAACH,SAAD,CAAf;EACH,CAHQ,EAGN,CAACA,SAAD,CAHM,CAAT;;EAKA,MAAMO,mBAAmB,GAAGC,QAAQ,IAAI;IACpCP,YAAY,CAACO,QAAD,CAAZ;EACH,CAFD;;EAIA,IAAGH,OAAH,EAAY,OAAO,IAAP;EACZ,MAAM;IAAEI;EAAF,IAAuBL,IAA7B;EAEA,OACI,4BACI;IAAG,SAAS,EAAC,oFAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,0CADJ,EAEI,MAAC,MAAD;IACI,SAAS,EAAC,MADd;IAEI,OAAO,EAAGK,gBAFd;IAGI,QAAQ,EAAGC,MAAM,IAAIH,mBAAmB,CAACG,MAAD,CAH5C;IAII,OAAO,EAAE,IAJb;IAKI,cAAc,EAAGC,QAAQ,IAAIA,QAAQ,CAACC,EAL1C;IAMI,cAAc,EAAGD,QAAQ,IAAK,GAAEA,QAAQ,CAACE,MAAO,MAAKF,QAAQ,CAACG,UAAW,cAN7E;IAOI,WAAW,EAAC,iCAPhB;IAQI,gBAAgB,EAAE,MAAM,mBAR5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADJ;AAgBH,CAzCD;;AA2CA,eAAef,gBAAf"},"metadata":{},"sourceType":"module"}