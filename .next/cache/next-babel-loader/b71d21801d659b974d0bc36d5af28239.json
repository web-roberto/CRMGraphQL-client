{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2';\nconst ACTUALIZAR_PEDIDO = gql`\n    mutation actualizarPedido($id: ID!, $input: PedidoInput ) {\n        actualizarPedido(id: $id, input: $input) {\n            estado\n        }\n    }\n`;\nconst ELIMINAR_PEDIDO = gql`\n    mutation eliminarPedido($id: ID!) {\n        eliminarPedido(id: $id) \n    }\n`;\nconst OBTENER_PEDIDOS = gql`\n  query obtenerPedidosVendedor {\n      obtenerPedidosVendedor {\n        id\n      }\n  }\n`;\n\nconst Pedido = ({\n  pedido\n}) => {\n  const {\n    id,\n    total,\n    cliente: {\n      nombre,\n      apellido,\n      telefono,\n      email\n    },\n    estado,\n    cliente\n  } = pedido; // Mutation para cambiar el estado de un pedido\n\n  const [actualizarPedido] = useMutation(ACTUALIZAR_PEDIDO);\n  const [eliminarPedido] = useMutation(ELIMINAR_PEDIDO, {\n    update(cache) {\n      const {\n        obtenerPedidosVendedor\n      } = cache.readQuery({\n        query: OBTENER_PEDIDOS\n      });\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidosVendedor: obtenerPedidosVendedor.filter(pedido => pedido.id !== id)\n        }\n      });\n    }\n\n  }); // console.log(pedido)\n\n  const {\n    0: estadoPedido,\n    1: setEstadoPedido\n  } = useState(estado);\n  const {\n    0: clase,\n    1: setClase\n  } = useState('');\n  useEffect(() => {\n    if (estadoPedido) {\n      setEstadoPedido(estadoPedido);\n    }\n\n    clasePedido();\n  }, [estadoPedido]); // Función que modifica el color del pedido de acuerdo a su estado\n\n  const clasePedido = () => {\n    if (estadoPedido === 'PENDIENTE') {\n      setClase('border-yellow-500');\n    } else if (estadoPedido === 'COMPLETADO') {\n      setClase('border-green-500');\n    } else {\n      setClase('border-red-800');\n    }\n  };\n\n  const cambiarEstadoPedido = async nuevoEstado => {\n    try {\n      const {\n        data\n      } = await actualizarPedido({\n        variables: {\n          id,\n          input: {\n            estado: nuevoEstado,\n            cliente: cliente.id\n          }\n        }\n      });\n      setEstadoPedido(data.actualizarPedido.estado);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const confirmarEliminarPedido = () => {\n    Swal.fire({\n      title: '¿Deseas eliminar a este pedido?',\n      text: \"Esta acción no se puede deshacer\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Eliminar',\n      cancelButtonText: 'No, Cancelar'\n    }).then(async result => {\n      if (result.value) {\n        try {\n          const data = await eliminarPedido({\n            variables: {\n              id\n            }\n          });\n          Swal.fire('Eliminado', data.eliminarPedido, 'success');\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: ` ${clase} border-t-4 mt-4 bg-white rounded p-6 md:grid md:grid-cols-2 md:gap-4 shadow-lg`\n  }, __jsx(\"div\", null, __jsx(\"p\", {\n    className: \"font-bold text-gray-800\"\n  }, \"Cliente: \", nombre, \" \", apellido, \" \"), email && __jsx(\"p\", {\n    className: \"flex items-center my-2\"\n  }, __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 mr-2\"\n  }, __jsx(\"path\", {\n    d: \"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n  })), email), telefono && __jsx(\"p\", {\n    className: \"flex items-center my-2\"\n  }, __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 mr-2\"\n  }, __jsx(\"path\", {\n    d: \"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"\n  })), telefono), __jsx(\"h2\", {\n    className: \"text-gray-800 font-bold mt-10\"\n  }, \"Estado Pedido:\"), __jsx(\"select\", {\n    className: \"mt-2 appearance-none bg-blue-600 border border-blue-600 text-white p-2 text-center rounded leading-tight focus:outline-none focus:bg-blue-600 focus:border-blue-500 uppercase text-xs font-bold \",\n    value: estadoPedido,\n    onChange: e => cambiarEstadoPedido(e.target.value)\n  }, __jsx(\"option\", {\n    value: \"COMPLETADO\"\n  }, \"COMPLETADO\"), __jsx(\"option\", {\n    value: \"PENDIENTE\"\n  }, \"PENDIENTE\"), __jsx(\"option\", {\n    value: \"CANCELADO\"\n  }, \"CANCELADO\"))), __jsx(\"div\", null, __jsx(\"h2\", {\n    className: \"text-gray-800 font-bold mt-2\"\n  }, \"Resumen del Pedido\"), pedido.pedido.map(articulo => __jsx(\"div\", {\n    key: articulo.id,\n    className: \"mt-4\"\n  }, __jsx(\"p\", {\n    className: \"text-sm text-gray-600\"\n  }, \"Producto: \", articulo.nombre, \" \"), __jsx(\"p\", {\n    className: \"text-sm text-gray-600\"\n  }, \"Cantidad: \", articulo.cantidad, \" \"))), __jsx(\"p\", {\n    className: \"text-gray-800 mt-3 font-bold \"\n  }, \"Total a pagar:\", __jsx(\"span\", {\n    className: \"font-light\"\n  }, \" $ \", total)), __jsx(\"button\", {\n    className: \"uppercase text-xs font-bold  flex items-center mt-4 bg-red-800 px-5 py-2 inline-block text-white rounded leading-tight\",\n    onClick: () => confirmarEliminarPedido()\n  }, \"Eliminar Pedido\", __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 ml-2\"\n  }, __jsx(\"path\", {\n    d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n  })))));\n};\n\nexport default Pedido;","map":null,"metadata":{},"sourceType":"module"}