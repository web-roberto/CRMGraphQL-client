{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction getRouteRegex(normalizedRoute) {\n  // Escape all characters that could be considered RegEx\n  const escapedRoute = (normalizedRoute.replace(/\\/$/, '') || '/').replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&');\n  const groups = {};\n  let groupIndex = 1;\n  const parameterizedRoute = escapedRoute.replace(/\\/\\\\\\[([^/]+?)\\\\\\](?=\\/|$)/g, (_, $1) => {\n    const isCatchAll = /^(\\\\\\.){3}/.test($1);\n    groups[$1 // Un-escape key\n    .replace(/\\\\([|\\\\{}()[\\]^$+*?.-])/g, '$1').replace(/^\\.{3}/, '') // eslint-disable-next-line no-sequences\n    ] = {\n      pos: groupIndex++,\n      repeat: isCatchAll\n    };\n    return isCatchAll ? '/(.+?)' : '/([^/]+?)';\n  });\n  return {\n    re: new RegExp('^' + parameterizedRoute + '(?:/)?$', 'i'),\n    groups\n  };\n}\n\nexports.getRouteRegex = getRouteRegex;","map":{"version":3,"names":["Object","defineProperty","exports","value","getRouteRegex","normalizedRoute","escapedRoute","replace","groups","groupIndex","parameterizedRoute","_","$1","isCatchAll","test","pos","repeat","re","RegExp"],"sources":["C:/DESPLIEGUES/APLICACIONES-EN-GITHUB/portolio-apps/web-development/jp-crm-graphql/crmcliente/node_modules/next/dist/next-server/lib/router/utils/route-regex.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getRouteRegex(normalizedRoute) {\n    // Escape all characters that could be considered RegEx\n    const escapedRoute = (normalizedRoute.replace(/\\/$/, '') || '/').replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&');\n    const groups = {};\n    let groupIndex = 1;\n    const parameterizedRoute = escapedRoute.replace(/\\/\\\\\\[([^/]+?)\\\\\\](?=\\/|$)/g, (_, $1) => {\n        const isCatchAll = /^(\\\\\\.){3}/.test($1);\n        groups[$1\n            // Un-escape key\n            .replace(/\\\\([|\\\\{}()[\\]^$+*?.-])/g, '$1')\n            .replace(/^\\.{3}/, '')\n        // eslint-disable-next-line no-sequences\n        ] = { pos: groupIndex++, repeat: isCatchAll };\n        return isCatchAll ? '/(.+?)' : '/([^/]+?)';\n    });\n    return {\n        re: new RegExp('^' + parameterizedRoute + '(?:/)?$', 'i'),\n        groups,\n    };\n}\nexports.getRouteRegex = getRouteRegex;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,aAAT,CAAuBC,eAAvB,EAAwC;EACpC;EACA,MAAMC,YAAY,GAAG,CAACD,eAAe,CAACE,OAAhB,CAAwB,KAAxB,EAA+B,EAA/B,KAAsC,GAAvC,EAA4CA,OAA5C,CAAoD,sBAApD,EAA4E,MAA5E,CAArB;EACA,MAAMC,MAAM,GAAG,EAAf;EACA,IAAIC,UAAU,GAAG,CAAjB;EACA,MAAMC,kBAAkB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,6BAArB,EAAoD,CAACI,CAAD,EAAIC,EAAJ,KAAW;IACtF,MAAMC,UAAU,GAAG,aAAaC,IAAb,CAAkBF,EAAlB,CAAnB;IACAJ,MAAM,CAACI,EAAE,CACL;IADK,CAEJL,OAFE,CAEM,0BAFN,EAEkC,IAFlC,EAGFA,OAHE,CAGM,QAHN,EAGgB,EAHhB,CAAD,CAIN;IAJM,CAAN,GAKI;MAAEQ,GAAG,EAAEN,UAAU,EAAjB;MAAqBO,MAAM,EAAEH;IAA7B,CALJ;IAMA,OAAOA,UAAU,GAAG,QAAH,GAAc,WAA/B;EACH,CAT0B,CAA3B;EAUA,OAAO;IACHI,EAAE,EAAE,IAAIC,MAAJ,CAAW,MAAMR,kBAAN,GAA2B,SAAtC,EAAiD,GAAjD,CADD;IAEHF;EAFG,CAAP;AAIH;;AACDN,OAAO,CAACE,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}