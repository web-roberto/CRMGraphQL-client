{"version":3,"file":"static/webpack/static\\development\\pages\\login.js.f895b2710c6c867cf895.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\n\nconst AUTENTICAR_USUARIO = gql`\n  mutation autenticarUsuario($input: AutenticarInput) {\n    autenticarUsuario(input: $input) {\n      token\n    }\n  }\n`;\n\nconst Login = () => {\n  //language\n  const [useLang, setLang] = useState('ES');\n  //distribuirlo como useContext en toda la aplicacion? El ApolloProvider es un useContext??\n  //(useLang == 'En') ? <p>English Text Here</p> : <p>French Text Here</p>\n\n  // routing\n  const router = useRouter();\n\n  const [mensaje, guardarMensaje] = useState(null);\n\n  // Mutation para crear nuevos usuarios en apollo\n  const [autenticarUsuario] = useMutation(AUTENTICAR_USUARIO);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email('El email no es v치lido')\n        .required('El email no puede ir vacio'),\n      password: Yup.string().required('El password es obligatorio'),\n    }),\n    onSubmit: async (valores) => {\n      // console.log(valores);\n      const { email, password } = valores;\n\n      try {\n        const { data } = await autenticarUsuario({\n          variables: {\n            input: {\n              email,\n              password,\n            },\n          },\n        });\n        console.log(data);\n        guardarMensaje('Autenticando...');\n\n        // Guardar el token en localstorage\n        setTimeout(() => {\n          const { token } = data.autenticarUsuario;\n          localStorage.setItem('token', token);\n        }, 1000);\n\n        // Redireccionar hacia clientes\n        setTimeout(() => {\n          guardarMensaje(null);\n          router.push('/');\n        }, 2000);\n      } catch (error) {\n        guardarMensaje(error.message.replace('GraphQL error: ', ''));\n        // console.log(error);\n\n        setTimeout(() => {\n          guardarMensaje(null);\n        }, 3000);\n      }\n    },\n  });\n\n  const mostrarMensaje = () => {\n    return (\n      <div className=\"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\">\n        <p>{mensaje}</p>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Layout>\n        <h1 className=\"text-center text-2xl text-white font-light\">\n          {useLang == 'En' ? 'Login' : 'Entre'}{' '}\n        </h1>\n\n        {mensaje && mostrarMensaje()}\n\n        <div className=\"flex justify-center mt-5\">\n          <div className=\"w-full max-w-sm\">\n            <form\n              className=\"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\"\n              onSubmit={formik.handleSubmit}\n            >\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"email\"\n                >\n                  {useLang == 'En' ? 'Email' : 'Correo elect칩nico'}\n                </label>\n\n                <input\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder={(useLang == 'En') ?  \"User's Email\" : \"Email Usuario\"}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.email}\n                />\n              </div>\n\n              {formik.touched.email && formik.errors.email ? (\n                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                  <p className=\"font-bold\">Error</p>\n                  <p>{formik.errors.email}</p>\n                </div>\n              ) : null}\n\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"password\"\n                >\n                  {useLang == 'En' ? 'Password' : 'Contrase침a'}\n                </label>\n\n                <input\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder={(useLang == 'En') ?  \"User's Password\" : \"Password Usuario\"} \n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.password}\n                />\n              </div>\n\n              {formik.touched.password && formik.errors.password ? (\n                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                  <p className=\"font-bold\">Error</p>\n                  <p>{formik.errors.password}</p>\n                </div>\n              ) : null}\n\n              <input\n                type=\"submit\"\n                className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercas hover:cursor-pointer hover:bg-gray-900\"\n                value={(useLang == 'En') ?  \"Start Session\" : \"Iniciar Sesi칩n\"}                            \n              />\n\n            </form>\n          </div>\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nexport default Login;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AADA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAGA;AAJA;AAMA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAFA;AADA;AADA;AACA;AANA;AAAA;AAKA;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA1BA;AAAA;AACA;AADA;AAAA;AAAA;AA4BA;AACA;AAEA;AACA;AACA;AACA;AAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AACA;AAgDA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;;;;A","sourceRoot":""}